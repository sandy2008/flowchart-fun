{"version":3,"sources":["slang/index.tsx","components/AppContext.tsx","components/Router.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Box","forwardRefWithAs","BoxComponent","Type","TypeComponent","AppContext","createContext","setIsReady","Provider","children","useReducer","isReady","value","Edit","lazy","ReadOnly","Router","path","exact","App","fallback","ErrorFallback","error","className","role","message","onClick","window","location","reload","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Sentry","dsn","integrations","Integrations","BrowserTracing","tracesSampleRate","enabled","process","REACT_APP_SENTRY_ENABLED","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2FAAA,gFAkBMA,EAAMC,YAAkCC,KACxCC,EAAOF,YAAiCG,M,4FCZjCC,EAAaC,wBAAc,CAAEC,WAAY,eAcvCC,IATE,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,SAAyC,EAC7BC,sBAAW,kBAAM,KAAM,GADM,mBACpDC,EADoD,KAC3CJ,EAD2C,KAE3D,OACE,cAACF,EAAWG,SAAZ,CAAqBI,MAAO,CAAED,UAASJ,cAAvC,SACGE,M,0KCdDI,EAAOC,gBAAK,kBAAM,uDAClBC,EAAWD,gBAAK,kBAAM,uDAEb,SAASE,IACtB,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAArB,SACE,cAACL,EAAD,MAEF,cAAC,IAAD,CAAOI,KAAK,gBAAZ,SACE,cAACF,EAAD,MAEF,cAAC,IAAD,CAAOE,KAAK,cAAZ,SACE,cAACJ,EAAD,W,4BCVK,SAASM,IACtB,OACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAsBC,SAAUC,EAAhC,SACE,cAAC,WAAD,CAAUD,SAAU,KAApB,SACE,cAACJ,EAAD,UAOV,SAASK,EAAT,GAAqD,IAA5BC,EAA2B,EAA3BA,MACvB,OACE,qBAAKC,UAAU,eAAf,SACE,eAAC,IAAD,CAAKC,KAAK,QAAQD,UAAU,gBAA5B,UACE,cAAC,IAAD,wDACA,qBAAKA,UAAU,eAAf,SACE,8BAAMD,EAAMG,YAEd,wBAAQC,QAAS,kBAAMC,OAAOC,SAASC,UAAvC,4BCxBR,IAYeC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAAY,CACVC,IACE,4EACFC,aAAc,CAAC,IAAIC,IAAaC,gBAEhCC,iBAAkB,IAClBC,QAAkD,MAAzCC,mIAAYC,2BAGvBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC/B,EAAD,MAEFgC,SAASC,eAAe,SAM1BtB,M","file":"static/js/main.7d2e0488.chunk.js","sourcesContent":["/* Do not edit this file directly */\n  import {\n  BoxComponent,\n  TypeComponent,\n  forwardRefWithAs,\n  PropsWithAs,\n  BaseBoxProps,\n  BaseTypeProps,\n} from \"@tone-row/slang\";\n\ntype Breakpoints = \"tablet\" | \"desktop\";\ntype Colors = \n  | \"color-background\"\n  | \"color-foreground\"\n  | \"palette-black-0\"\n  | \"palette-white-0\";\nexport type BoxProps = PropsWithAs<BaseBoxProps<Breakpoints, Colors>>;\nexport type TypeProps = PropsWithAs<BaseTypeProps<Breakpoints, Colors>>;\nconst Box = forwardRefWithAs<BoxProps, \"div\">(BoxComponent);\nconst Type = forwardRefWithAs<TypeProps, \"p\">(TypeComponent);\nexport { Box, Type };\n","import {\n  createContext,\n  DispatchWithoutAction,\n  ReactNode,\n  useReducer,\n} from \"react\";\n\nexport const AppContext = createContext({ setIsReady: () => {} } as {\n  isReady: boolean;\n  setIsReady: DispatchWithoutAction;\n});\n\nconst Provider = ({ children }: { children?: ReactNode }) => {\n  const [isReady, setIsReady] = useReducer(() => true, false);\n  return (\n    <AppContext.Provider value={{ isReady, setIsReady }}>\n      {children}\n    </AppContext.Provider>\n  );\n};\n\nexport default Provider;\n","import { lazy } from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nconst Edit = lazy(() => import(\"./Edit\"));\nconst ReadOnly = lazy(() => import(\"./ReadOnly\"));\n\nexport default function Router() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/\" exact>\n          <Edit />\n        </Route>\n        <Route path=\"/r/:graphText\">\n          <ReadOnly />\n        </Route>\n        <Route path=\"/:workspace\">\n          <Edit />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n","import Router from \"./components/Router\";\nimport * as Sentry from \"@sentry/react\";\nimport React, { Suspense } from \"react\";\nimport Provider from \"./components/AppContext\";\nimport { Box, Type } from \"./slang\";\n\nexport default function App() {\n  return (\n    <Provider>\n      <Sentry.ErrorBoundary fallback={ErrorFallback}>\n        <Suspense fallback={null}>\n          <Router />\n        </Suspense>\n      </Sentry.ErrorBoundary>\n    </Provider>\n  );\n}\n\nfunction ErrorFallback({ error }: { error: Error }) {\n  return (\n    <div className=\"errorWrapper\">\n      <Box role=\"alert\" className=\"error-wrapper\">\n        <Type>Sorry! Something went wrong. ðŸ˜”</Type>\n        <div className=\"errorMessage\">\n          <pre>{error.message}</pre>\n        </div>\n        <button onClick={() => window.location.reload()}>Try again</button>\n      </Box>\n    </div>\n  );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as Sentry from \"@sentry/react\";\nimport { Integrations } from \"@sentry/tracing\";\nimport \"./index.css\";\nimport \"./slang/slang.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nSentry.init({\n  dsn:\n    \"https://5c0087f5d8ae4a6ab7aa4f42eab785f1@o394152.ingest.sentry.io/5673697\",\n  integrations: [new Integrations.BrowserTracing()],\n  // percentage of transactions to capture for performance monitoring.\n  tracesSampleRate: 0.25,\n  enabled: process.env.REACT_APP_SENTRY_ENABLED === \"1\",\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}